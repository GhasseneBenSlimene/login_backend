import bcrypt

class PasswordHasher:
    def __init__(self):
        """
        Initializes the PasswordHasher class with a salt generated by bcrypt.
        """
        self.salt = bcrypt.gensalt()

    def hash_password(self, password):
        """
        Hashes the given password using bcrypt and the salt generated during initialization.

        Args:
            password (str): The password to be hashed.

        Returns:
            str: The hashed password.
        """
        hashed_password = bcrypt.hashpw(password.encode('utf-8'), self.salt)
        return hashed_password.decode('utf-8')

    def check_password(self, password, hashed_password):
        """
        Checks if the given password matches the given hashed password using bcrypt.

        Args:
            password (str): The password to be checked.
            hashed_password (str): The hashed password to be compared against.

        Returns:
            bool: True if the password matches the hashed password, False otherwise.
        """
        return bcrypt.checkpw(password.encode('utf-8'), hashed_password.encode('utf-8'))